
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'


repositories {
    mavenCentral()
}

compileJava {
    sourceCompatibility = 11
    targetCompatibility = 11
}

dependencies {

    compile project(':josc-api')

    // S3 / aws client
    compile 'software.amazon.awssdk:s3:2.5.25'
    compile 'io.minio:minio:6.0.4'

    // Test dependencies
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId 'com.elderbyte.josc'
            artifactId 'josc-driver-s3'
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

task upload {
    dependsOn bintrayUpload
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['mavenJava']

    dryRun = false //Whether to run this as dry-run, without deploying
    publish = true //If version should be auto published after an upload

    pkg {
        repo = 'maven'
        name = "${jar.baseName}"
        userOrg = 'elderbyte'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/ElderByte-/josc'

        version {
            name = project.version //Bintray logical version name
        }
    }
}
