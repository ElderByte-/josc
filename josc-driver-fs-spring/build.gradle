
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'



jar {
    enabled = true
}

bootJar {
    // Since this is a library, it cant be executed directly
    enabled = false // Don't create a runnable fat jar
}



compileJava {
    sourceCompatibility = 10
    targetCompatibility = 10

    options.encoding = "UTF-8"
}

repositories {
    mavenCentral()
    maven { url "http://dl.bintray.com/elderbyte/maven" }
}

dependencies {

    compile project(':josc-api')

    // Spring
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-web")

    // Test dependencies
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit")
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId 'com.elderbyte.josc'
            artifactId 'josc-driver-fs-spring'
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['mavenJava']

    dryRun = "${bintrayDryRun}" //Whether to run this as dry-run, without deploying
    publish = true //If version should be auto published after an upload

    pkg {
        repo = 'maven'
        name = "${jar.baseName}"
        userOrg = 'elderbyte'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/ElderByte-/josc'

        version {
            name = project.version //Bintray logical version name
        }
    }
}

task upload {
    dependsOn bintrayUpload
}
